// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: engine.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_engine_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_engine_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h" // IWYU pragma: export
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/repeated_field.h" // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_engine_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
} // namespace internal
} // namespace protobuf
} // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_engine_2eproto {
    static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_engine_2eproto;
namespace enginePackage {
class ClientNetInfo;
struct ClientNetInfoDefaultTypeInternal;
extern ClientNetInfoDefaultTypeInternal _ClientNetInfo_default_instance_;
class FileRequest;
struct FileRequestDefaultTypeInternal;
extern FileRequestDefaultTypeInternal _FileRequest_default_instance_;
class FileResponse;
struct FileResponseDefaultTypeInternal;
extern FileResponseDefaultTypeInternal _FileResponse_default_instance_;
class ServerResponse;
struct ServerResponseDefaultTypeInternal;
extern ServerResponseDefaultTypeInternal _ServerResponse_default_instance_;
class endTurnArgs;
struct endTurnArgsDefaultTypeInternal;
extern endTurnArgsDefaultTypeInternal _endTurnArgs_default_instance_;
class placeCardArgs;
struct placeCardArgsDefaultTypeInternal;
extern placeCardArgsDefaultTypeInternal _placeCardArgs_default_instance_;
class playActionArgs;
struct playActionArgsDefaultTypeInternal;
extern playActionArgsDefaultTypeInternal _playActionArgs_default_instance_;
} // namespace enginePackage
namespace google {
namespace protobuf {} // namespace protobuf
} // namespace google

namespace enginePackage {

// ===================================================================

// -------------------------------------------------------------------

class playActionArgs final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.playActionArgs) */ {
  public:
    inline playActionArgs() : playActionArgs(nullptr) {}
    ~playActionArgs() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR playActionArgs(::google::protobuf::internal::ConstantInitialized);

    inline playActionArgs(const playActionArgs &from) : playActionArgs(nullptr, from) {}
    playActionArgs(playActionArgs &&from) noexcept : playActionArgs() { *this = ::std::move(from); }

    inline playActionArgs &operator=(const playActionArgs &from) {
        CopyFrom(from);
        return *this;
    }
    inline playActionArgs &operator=(playActionArgs &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const playActionArgs &default_instance() { return *internal_default_instance(); }
    static inline const playActionArgs *internal_default_instance() {
        return reinterpret_cast<const playActionArgs *>(&_playActionArgs_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 1;

    friend void swap(playActionArgs &a, playActionArgs &b) { a.Swap(&b); }
    inline void Swap(playActionArgs *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(playActionArgs *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    playActionArgs *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<playActionArgs>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const playActionArgs &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const playActionArgs &from) { playActionArgs::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(playActionArgs *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.playActionArgs"; }

  protected:
    explicit playActionArgs(::google::protobuf::Arena *arena);
    playActionArgs(::google::protobuf::Arena *arena, const playActionArgs &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kPlayerIdFieldNumber = 1,
        kActionIdFieldNumber = 2,
        kTargetIdFieldNumber = 3,
        kSrcIdFieldNumber = 4,
        kDestIdFieldNumber = 5,
    };
    // uint32 playerId = 1;
    void clear_playerid();
    ::uint32_t playerid() const;
    void set_playerid(::uint32_t value);

  private:
    ::uint32_t _internal_playerid() const;
    void _internal_set_playerid(::uint32_t value);

  public:
    // uint32 actionId = 2;
    void clear_actionid();
    ::uint32_t actionid() const;
    void set_actionid(::uint32_t value);

  private:
    ::uint32_t _internal_actionid() const;
    void _internal_set_actionid(::uint32_t value);

  public:
    // uint32 targetId = 3;
    void clear_targetid();
    ::uint32_t targetid() const;
    void set_targetid(::uint32_t value);

  private:
    ::uint32_t _internal_targetid() const;
    void _internal_set_targetid(::uint32_t value);

  public:
    // uint32 srcId = 4;
    void clear_srcid();
    ::uint32_t srcid() const;
    void set_srcid(::uint32_t value);

  private:
    ::uint32_t _internal_srcid() const;
    void _internal_set_srcid(::uint32_t value);

  public:
    // uint32 destId = 5;
    void clear_destid();
    ::uint32_t destid() const;
    void set_destid(::uint32_t value);

  private:
    ::uint32_t _internal_destid() const;
    void _internal_set_destid(::uint32_t value);

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.playActionArgs)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 0, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::uint32_t playerid_;
        ::uint32_t actionid_;
        ::uint32_t targetid_;
        ::uint32_t srcid_;
        ::uint32_t destid_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
}; // -------------------------------------------------------------------

class placeCardArgs final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.placeCardArgs) */ {
  public:
    inline placeCardArgs() : placeCardArgs(nullptr) {}
    ~placeCardArgs() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR placeCardArgs(::google::protobuf::internal::ConstantInitialized);

    inline placeCardArgs(const placeCardArgs &from) : placeCardArgs(nullptr, from) {}
    placeCardArgs(placeCardArgs &&from) noexcept : placeCardArgs() { *this = ::std::move(from); }

    inline placeCardArgs &operator=(const placeCardArgs &from) {
        CopyFrom(from);
        return *this;
    }
    inline placeCardArgs &operator=(placeCardArgs &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const placeCardArgs &default_instance() { return *internal_default_instance(); }
    static inline const placeCardArgs *internal_default_instance() {
        return reinterpret_cast<const placeCardArgs *>(&_placeCardArgs_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;

    friend void swap(placeCardArgs &a, placeCardArgs &b) { a.Swap(&b); }
    inline void Swap(placeCardArgs *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(placeCardArgs *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    placeCardArgs *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<placeCardArgs>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const placeCardArgs &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const placeCardArgs &from) { placeCardArgs::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(placeCardArgs *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.placeCardArgs"; }

  protected:
    explicit placeCardArgs(::google::protobuf::Arena *arena);
    placeCardArgs(::google::protobuf::Arena *arena, const placeCardArgs &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kPlayerIdFieldNumber = 1,
        kCardIdFieldNumber = 2,
        kBaseIdFieldNumber = 3,
    };
    // uint32 playerId = 1;
    void clear_playerid();
    ::uint32_t playerid() const;
    void set_playerid(::uint32_t value);

  private:
    ::uint32_t _internal_playerid() const;
    void _internal_set_playerid(::uint32_t value);

  public:
    // uint32 cardId = 2;
    void clear_cardid();
    ::uint32_t cardid() const;
    void set_cardid(::uint32_t value);

  private:
    ::uint32_t _internal_cardid() const;
    void _internal_set_cardid(::uint32_t value);

  public:
    // uint32 baseId = 3;
    void clear_baseid();
    ::uint32_t baseid() const;
    void set_baseid(::uint32_t value);

  private:
    ::uint32_t _internal_baseid() const;
    void _internal_set_baseid(::uint32_t value);

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.placeCardArgs)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::uint32_t playerid_;
        ::uint32_t cardid_;
        ::uint32_t baseid_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
}; // -------------------------------------------------------------------

class endTurnArgs final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.endTurnArgs) */ {
  public:
    inline endTurnArgs() : endTurnArgs(nullptr) {}
    ~endTurnArgs() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR endTurnArgs(::google::protobuf::internal::ConstantInitialized);

    inline endTurnArgs(const endTurnArgs &from) : endTurnArgs(nullptr, from) {}
    endTurnArgs(endTurnArgs &&from) noexcept : endTurnArgs() { *this = ::std::move(from); }

    inline endTurnArgs &operator=(const endTurnArgs &from) {
        CopyFrom(from);
        return *this;
    }
    inline endTurnArgs &operator=(endTurnArgs &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const endTurnArgs &default_instance() { return *internal_default_instance(); }
    static inline const endTurnArgs *internal_default_instance() {
        return reinterpret_cast<const endTurnArgs *>(&_endTurnArgs_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 4;

    friend void swap(endTurnArgs &a, endTurnArgs &b) { a.Swap(&b); }
    inline void Swap(endTurnArgs *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(endTurnArgs *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    endTurnArgs *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<endTurnArgs>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const endTurnArgs &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const endTurnArgs &from) { endTurnArgs::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(endTurnArgs *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.endTurnArgs"; }

  protected:
    explicit endTurnArgs(::google::protobuf::Arena *arena);
    endTurnArgs(::google::protobuf::Arena *arena, const endTurnArgs &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kPlayerIdFieldNumber = 1,
    };
    // uint32 playerId = 1;
    void clear_playerid();
    ::uint32_t playerid() const;
    void set_playerid(::uint32_t value);

  private:
    ::uint32_t _internal_playerid() const;
    void _internal_set_playerid(::uint32_t value);

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.endTurnArgs)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::uint32_t playerid_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
}; // -------------------------------------------------------------------

class ServerResponse final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.ServerResponse) */ {
  public:
    inline ServerResponse() : ServerResponse(nullptr) {}
    ~ServerResponse() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR ServerResponse(::google::protobuf::internal::ConstantInitialized);

    inline ServerResponse(const ServerResponse &from) : ServerResponse(nullptr, from) {}
    ServerResponse(ServerResponse &&from) noexcept : ServerResponse() { *this = ::std::move(from); }

    inline ServerResponse &operator=(const ServerResponse &from) {
        CopyFrom(from);
        return *this;
    }
    inline ServerResponse &operator=(ServerResponse &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const ServerResponse &default_instance() { return *internal_default_instance(); }
    static inline const ServerResponse *internal_default_instance() {
        return reinterpret_cast<const ServerResponse *>(&_ServerResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 5;

    friend void swap(ServerResponse &a, ServerResponse &b) { a.Swap(&b); }
    inline void Swap(ServerResponse *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(ServerResponse *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    ServerResponse *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<ServerResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const ServerResponse &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const ServerResponse &from) { ServerResponse::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(ServerResponse *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.ServerResponse"; }

  protected:
    explicit ServerResponse(::google::protobuf::Arena *arena);
    ServerResponse(::google::protobuf::Arena *arena, const ServerResponse &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kStatusFieldNumber = 1,
    };
    // int32 Status = 1;
    void clear_status();
    ::int32_t status() const;
    void set_status(::int32_t value);

  private:
    ::int32_t _internal_status() const;
    void _internal_set_status(::int32_t value);

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.ServerResponse)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::int32_t status_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
}; // -------------------------------------------------------------------

class FileResponse final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.FileResponse) */ {
  public:
    inline FileResponse() : FileResponse(nullptr) {}
    ~FileResponse() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR FileResponse(::google::protobuf::internal::ConstantInitialized);

    inline FileResponse(const FileResponse &from) : FileResponse(nullptr, from) {}
    FileResponse(FileResponse &&from) noexcept : FileResponse() { *this = ::std::move(from); }

    inline FileResponse &operator=(const FileResponse &from) {
        CopyFrom(from);
        return *this;
    }
    inline FileResponse &operator=(FileResponse &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const FileResponse &default_instance() { return *internal_default_instance(); }
    static inline const FileResponse *internal_default_instance() {
        return reinterpret_cast<const FileResponse *>(&_FileResponse_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 3;

    friend void swap(FileResponse &a, FileResponse &b) { a.Swap(&b); }
    inline void Swap(FileResponse *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(FileResponse *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    FileResponse *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<FileResponse>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const FileResponse &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const FileResponse &from) { FileResponse::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(FileResponse *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.FileResponse"; }

  protected:
    explicit FileResponse(::google::protobuf::Arena *arena);
    FileResponse(::google::protobuf::Arena *arena, const FileResponse &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kFileContentFieldNumber = 1,
    };
    // bytes file_content = 1;
    void clear_file_content();
    const std::string &file_content() const;
    template <typename Arg_ = const std::string &, typename... Args_> void set_file_content(Arg_ &&arg, Args_... args);
    std::string *mutable_file_content();
    PROTOBUF_NODISCARD std::string *release_file_content();
    void set_allocated_file_content(std::string *value);

  private:
    const std::string &_internal_file_content() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_content(const std::string &value);
    std::string *_internal_mutable_file_content();

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.FileResponse)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::google::protobuf::internal::ArenaStringPtr file_content_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
}; // -------------------------------------------------------------------

class FileRequest final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.FileRequest) */ {
  public:
    inline FileRequest() : FileRequest(nullptr) {}
    ~FileRequest() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR FileRequest(::google::protobuf::internal::ConstantInitialized);

    inline FileRequest(const FileRequest &from) : FileRequest(nullptr, from) {}
    FileRequest(FileRequest &&from) noexcept : FileRequest() { *this = ::std::move(from); }

    inline FileRequest &operator=(const FileRequest &from) {
        CopyFrom(from);
        return *this;
    }
    inline FileRequest &operator=(FileRequest &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const FileRequest &default_instance() { return *internal_default_instance(); }
    static inline const FileRequest *internal_default_instance() {
        return reinterpret_cast<const FileRequest *>(&_FileRequest_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 2;

    friend void swap(FileRequest &a, FileRequest &b) { a.Swap(&b); }
    inline void Swap(FileRequest *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(FileRequest *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    FileRequest *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<FileRequest>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const FileRequest &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const FileRequest &from) { FileRequest::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(FileRequest *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.FileRequest"; }

  protected:
    explicit FileRequest(::google::protobuf::Arena *arena);
    FileRequest(::google::protobuf::Arena *arena, const FileRequest &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kFileNameFieldNumber = 1,
    };
    // string file_name = 1;
    void clear_file_name();
    const std::string &file_name() const;
    template <typename Arg_ = const std::string &, typename... Args_> void set_file_name(Arg_ &&arg, Args_... args);
    std::string *mutable_file_name();
    PROTOBUF_NODISCARD std::string *release_file_name();
    void set_allocated_file_name(std::string *value);

  private:
    const std::string &_internal_file_name() const;
    inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const std::string &value);
    std::string *_internal_mutable_file_name();

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.FileRequest)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 43, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::google::protobuf::internal::ArenaStringPtr file_name_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
}; // -------------------------------------------------------------------

class ClientNetInfo final
    : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:enginePackage.ClientNetInfo) */ {
  public:
    inline ClientNetInfo() : ClientNetInfo(nullptr) {}
    ~ClientNetInfo() override;
    template <typename = void>
    explicit PROTOBUF_CONSTEXPR ClientNetInfo(::google::protobuf::internal::ConstantInitialized);

    inline ClientNetInfo(const ClientNetInfo &from) : ClientNetInfo(nullptr, from) {}
    ClientNetInfo(ClientNetInfo &&from) noexcept : ClientNetInfo() { *this = ::std::move(from); }

    inline ClientNetInfo &operator=(const ClientNetInfo &from) {
        CopyFrom(from);
        return *this;
    }
    inline ClientNetInfo &operator=(ClientNetInfo &&from) noexcept {
        if (this == &from)
            return *this;
        if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
            && GetArena() != nullptr
#endif // !PROTOBUF_FORCE_COPY_IN_MOVE
        ) {
            InternalSwap(&from);
        } else {
            CopyFrom(from);
        }
        return *this;
    }

    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
        return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
    }

    static const ::google::protobuf::Descriptor *descriptor() { return GetDescriptor(); }
    static const ::google::protobuf::Descriptor *GetDescriptor() { return default_instance().GetMetadata().descriptor; }
    static const ::google::protobuf::Reflection *GetReflection() { return default_instance().GetMetadata().reflection; }
    static const ClientNetInfo &default_instance() { return *internal_default_instance(); }
    static inline const ClientNetInfo *internal_default_instance() {
        return reinterpret_cast<const ClientNetInfo *>(&_ClientNetInfo_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 6;

    friend void swap(ClientNetInfo &a, ClientNetInfo &b) { a.Swap(&b); }
    inline void Swap(ClientNetInfo *other) {
        if (other == this)
            return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else  // PROTOBUF_FORCE_COPY_IN_SWAP
        if (GetArena() == other->GetArena()) {
#endif // !PROTOBUF_FORCE_COPY_IN_SWAP
            InternalSwap(other);
        } else {
            ::google::protobuf::internal::GenericSwap(this, other);
        }
    }
    void UnsafeArenaSwap(ClientNetInfo *other) {
        if (other == this)
            return;
        ABSL_DCHECK(GetArena() == other->GetArena());
        InternalSwap(other);
    }

    // implements Message ----------------------------------------------

    ClientNetInfo *New(::google::protobuf::Arena *arena = nullptr) const final {
        return CreateMaybeMessage<ClientNetInfo>(arena);
    }
    using ::google::protobuf::Message::CopyFrom;
    void CopyFrom(const ClientNetInfo &from);
    using ::google::protobuf::Message::MergeFrom;
    void MergeFrom(const ClientNetInfo &from) { ClientNetInfo::MergeImpl(*this, from); }

  private:
    static void MergeImpl(::google::protobuf::Message &to_msg, const ::google::protobuf::Message &from_msg);

  public:
    PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
    bool IsInitialized() const final;

    ::size_t ByteSizeLong() const final;
    const char *_InternalParse(const char *ptr, ::google::protobuf::internal::ParseContext *ctx) final;
    ::uint8_t *_InternalSerialize(::uint8_t *target, ::google::protobuf::io::EpsCopyOutputStream *stream) const final;
    int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
    ::google::protobuf::internal::CachedSize *AccessCachedSize() const final;
    void SharedCtor(::google::protobuf::Arena *arena);
    void SharedDtor();
    void InternalSwap(ClientNetInfo *other);

  private:
    friend class ::google::protobuf::internal::AnyMetadata;
    static ::absl::string_view FullMessageName() { return "enginePackage.ClientNetInfo"; }

  protected:
    explicit ClientNetInfo(::google::protobuf::Arena *arena);
    ClientNetInfo(::google::protobuf::Arena *arena, const ClientNetInfo &from);

  public:
    static const ClassData _class_data_;
    const ::google::protobuf::Message::ClassData *GetClassData() const final;

    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    enum : int {
        kPortFieldNumber = 1,
    };
    // uint32 port = 1;
    void clear_port();
    ::uint32_t port() const;
    void set_port(::uint32_t value);

  private:
    ::uint32_t _internal_port() const;
    void _internal_set_port(::uint32_t value);

  public:
    // @@protoc_insertion_point(class_scope:enginePackage.ClientNetInfo)
  private:
    class _Internal;

    friend class ::google::protobuf::internal::TcParser;
    static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
    friend class ::google::protobuf::MessageLite;
    friend class ::google::protobuf::Arena;
    template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
    using InternalArenaConstructable_ = void;
    using DestructorSkippable_ = void;
    struct Impl_ {

        inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena *arena, const Impl_ &from);
        ::uint32_t port_;
        mutable ::google::protobuf::internal::CachedSize _cached_size_;
        PROTOBUF_TSAN_DECLARE_MEMBER
    };
    union {
        Impl_ _impl_;
    };
    friend struct ::TableStruct_engine_2eproto;
};

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// -------------------------------------------------------------------

// placeCardArgs

// uint32 playerId = 1;
inline void placeCardArgs::clear_playerid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.playerid_ = 0u;
}
inline ::uint32_t placeCardArgs::playerid() const {
    // @@protoc_insertion_point(field_get:enginePackage.placeCardArgs.playerId)
    return _internal_playerid();
}
inline void placeCardArgs::set_playerid(::uint32_t value) {
    _internal_set_playerid(value);
    // @@protoc_insertion_point(field_set:enginePackage.placeCardArgs.playerId)
}
inline ::uint32_t placeCardArgs::_internal_playerid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.playerid_;
}
inline void placeCardArgs::_internal_set_playerid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.playerid_ = value;
}

// uint32 cardId = 2;
inline void placeCardArgs::clear_cardid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.cardid_ = 0u;
}
inline ::uint32_t placeCardArgs::cardid() const {
    // @@protoc_insertion_point(field_get:enginePackage.placeCardArgs.cardId)
    return _internal_cardid();
}
inline void placeCardArgs::set_cardid(::uint32_t value) {
    _internal_set_cardid(value);
    // @@protoc_insertion_point(field_set:enginePackage.placeCardArgs.cardId)
}
inline ::uint32_t placeCardArgs::_internal_cardid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.cardid_;
}
inline void placeCardArgs::_internal_set_cardid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.cardid_ = value;
}

// uint32 baseId = 3;
inline void placeCardArgs::clear_baseid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.baseid_ = 0u;
}
inline ::uint32_t placeCardArgs::baseid() const {
    // @@protoc_insertion_point(field_get:enginePackage.placeCardArgs.baseId)
    return _internal_baseid();
}
inline void placeCardArgs::set_baseid(::uint32_t value) {
    _internal_set_baseid(value);
    // @@protoc_insertion_point(field_set:enginePackage.placeCardArgs.baseId)
}
inline ::uint32_t placeCardArgs::_internal_baseid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.baseid_;
}
inline void placeCardArgs::_internal_set_baseid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.baseid_ = value;
}

// -------------------------------------------------------------------

// playActionArgs

// uint32 playerId = 1;
inline void playActionArgs::clear_playerid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.playerid_ = 0u;
}
inline ::uint32_t playActionArgs::playerid() const {
    // @@protoc_insertion_point(field_get:enginePackage.playActionArgs.playerId)
    return _internal_playerid();
}
inline void playActionArgs::set_playerid(::uint32_t value) {
    _internal_set_playerid(value);
    // @@protoc_insertion_point(field_set:enginePackage.playActionArgs.playerId)
}
inline ::uint32_t playActionArgs::_internal_playerid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.playerid_;
}
inline void playActionArgs::_internal_set_playerid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.playerid_ = value;
}

// uint32 actionId = 2;
inline void playActionArgs::clear_actionid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.actionid_ = 0u;
}
inline ::uint32_t playActionArgs::actionid() const {
    // @@protoc_insertion_point(field_get:enginePackage.playActionArgs.actionId)
    return _internal_actionid();
}
inline void playActionArgs::set_actionid(::uint32_t value) {
    _internal_set_actionid(value);
    // @@protoc_insertion_point(field_set:enginePackage.playActionArgs.actionId)
}
inline ::uint32_t playActionArgs::_internal_actionid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.actionid_;
}
inline void playActionArgs::_internal_set_actionid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.actionid_ = value;
}

// uint32 targetId = 3;
inline void playActionArgs::clear_targetid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.targetid_ = 0u;
}
inline ::uint32_t playActionArgs::targetid() const {
    // @@protoc_insertion_point(field_get:enginePackage.playActionArgs.targetId)
    return _internal_targetid();
}
inline void playActionArgs::set_targetid(::uint32_t value) {
    _internal_set_targetid(value);
    // @@protoc_insertion_point(field_set:enginePackage.playActionArgs.targetId)
}
inline ::uint32_t playActionArgs::_internal_targetid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.targetid_;
}
inline void playActionArgs::_internal_set_targetid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.targetid_ = value;
}

// uint32 srcId = 4;
inline void playActionArgs::clear_srcid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.srcid_ = 0u;
}
inline ::uint32_t playActionArgs::srcid() const {
    // @@protoc_insertion_point(field_get:enginePackage.playActionArgs.srcId)
    return _internal_srcid();
}
inline void playActionArgs::set_srcid(::uint32_t value) {
    _internal_set_srcid(value);
    // @@protoc_insertion_point(field_set:enginePackage.playActionArgs.srcId)
}
inline ::uint32_t playActionArgs::_internal_srcid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.srcid_;
}
inline void playActionArgs::_internal_set_srcid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.srcid_ = value;
}

// uint32 destId = 5;
inline void playActionArgs::clear_destid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.destid_ = 0u;
}
inline ::uint32_t playActionArgs::destid() const {
    // @@protoc_insertion_point(field_get:enginePackage.playActionArgs.destId)
    return _internal_destid();
}
inline void playActionArgs::set_destid(::uint32_t value) {
    _internal_set_destid(value);
    // @@protoc_insertion_point(field_set:enginePackage.playActionArgs.destId)
}
inline ::uint32_t playActionArgs::_internal_destid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.destid_;
}
inline void playActionArgs::_internal_set_destid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.destid_ = value;
}

// -------------------------------------------------------------------

// FileRequest

// string file_name = 1;
inline void FileRequest::clear_file_name() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.file_name_.ClearToEmpty();
}
inline const std::string &FileRequest::file_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    // @@protoc_insertion_point(field_get:enginePackage.FileRequest.file_name)
    return _internal_file_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FileRequest::set_file_name(Arg_ &&arg, Args_... args) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.file_name_.Set(static_cast<Arg_ &&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:enginePackage.FileRequest.file_name)
}
inline std::string *FileRequest::mutable_file_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    std::string *_s = _internal_mutable_file_name();
    // @@protoc_insertion_point(field_mutable:enginePackage.FileRequest.file_name)
    return _s;
}
inline const std::string &FileRequest::_internal_file_name() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.file_name_.Get();
}
inline void FileRequest::_internal_set_file_name(const std::string &value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.file_name_.Set(value, GetArena());
}
inline std::string *FileRequest::_internal_mutable_file_name() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    return _impl_.file_name_.Mutable(GetArena());
}
inline std::string *FileRequest::release_file_name() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    // @@protoc_insertion_point(field_release:enginePackage.FileRequest.file_name)
    return _impl_.file_name_.Release();
}
inline void FileRequest::set_allocated_file_name(std::string *value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.file_name_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if (_impl_.file_name_.IsDefault()) {
        _impl_.file_name_.Set("", GetArena());
    }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
       // @@protoc_insertion_point(field_set_allocated:enginePackage.FileRequest.file_name)
}

// -------------------------------------------------------------------

// FileResponse

// bytes file_content = 1;
inline void FileResponse::clear_file_content() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.file_content_.ClearToEmpty();
}
inline const std::string &FileResponse::file_content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    // @@protoc_insertion_point(field_get:enginePackage.FileResponse.file_content)
    return _internal_file_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FileResponse::set_file_content(Arg_ &&arg, Args_... args) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.file_content_.SetBytes(static_cast<Arg_ &&>(arg), args..., GetArena());
    // @@protoc_insertion_point(field_set:enginePackage.FileResponse.file_content)
}
inline std::string *FileResponse::mutable_file_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    std::string *_s = _internal_mutable_file_content();
    // @@protoc_insertion_point(field_mutable:enginePackage.FileResponse.file_content)
    return _s;
}
inline const std::string &FileResponse::_internal_file_content() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.file_content_.Get();
}
inline void FileResponse::_internal_set_file_content(const std::string &value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.file_content_.Set(value, GetArena());
}
inline std::string *FileResponse::_internal_mutable_file_content() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    return _impl_.file_content_.Mutable(GetArena());
}
inline std::string *FileResponse::release_file_content() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    // @@protoc_insertion_point(field_release:enginePackage.FileResponse.file_content)
    return _impl_.file_content_.Release();
}
inline void FileResponse::set_allocated_file_content(std::string *value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.file_content_.SetAllocated(value, GetArena());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if (_impl_.file_content_.IsDefault()) {
        _impl_.file_content_.Set("", GetArena());
    }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
       // @@protoc_insertion_point(field_set_allocated:enginePackage.FileResponse.file_content)
}

// -------------------------------------------------------------------

// endTurnArgs

// uint32 playerId = 1;
inline void endTurnArgs::clear_playerid() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.playerid_ = 0u;
}
inline ::uint32_t endTurnArgs::playerid() const {
    // @@protoc_insertion_point(field_get:enginePackage.endTurnArgs.playerId)
    return _internal_playerid();
}
inline void endTurnArgs::set_playerid(::uint32_t value) {
    _internal_set_playerid(value);
    // @@protoc_insertion_point(field_set:enginePackage.endTurnArgs.playerId)
}
inline ::uint32_t endTurnArgs::_internal_playerid() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.playerid_;
}
inline void endTurnArgs::_internal_set_playerid(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.playerid_ = value;
}

// -------------------------------------------------------------------

// ServerResponse

// int32 Status = 1;
inline void ServerResponse::clear_status() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.status_ = 0;
}
inline ::int32_t ServerResponse::status() const {
    // @@protoc_insertion_point(field_get:enginePackage.ServerResponse.Status)
    return _internal_status();
}
inline void ServerResponse::set_status(::int32_t value) {
    _internal_set_status(value);
    // @@protoc_insertion_point(field_set:enginePackage.ServerResponse.Status)
}
inline ::int32_t ServerResponse::_internal_status() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.status_;
}
inline void ServerResponse::_internal_set_status(::int32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.status_ = value;
}

// -------------------------------------------------------------------

// ClientNetInfo

// uint32 port = 1;
inline void ClientNetInfo::clear_port() {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    _impl_.port_ = 0u;
}
inline ::uint32_t ClientNetInfo::port() const {
    // @@protoc_insertion_point(field_get:enginePackage.ClientNetInfo.port)
    return _internal_port();
}
inline void ClientNetInfo::set_port(::uint32_t value) {
    _internal_set_port(value);
    // @@protoc_insertion_point(field_set:enginePackage.ClientNetInfo.port)
}
inline ::uint32_t ClientNetInfo::_internal_port() const {
    PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
    return _impl_.port_;
}
inline void ClientNetInfo::_internal_set_port(::uint32_t value) {
    PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
    ;
    _impl_.port_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)
} // namespace enginePackage

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif // GOOGLE_PROTOBUF_INCLUDED_engine_2eproto_2epb_2eh
